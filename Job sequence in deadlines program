#include <stdio.h>
#include <stdlib.h>

// Structure to represent a job
typedef struct {
    int id;       // Job ID
    int deadline; // Deadline of the job
    int profit;   // Profit of the job
} Job;

// Comparison function to sort jobs by descending profit
int compare(const void *a, const void *b) {
    return ((Job *)b)->profit - ((Job *)a)->profit;
}

// Function to find the maximum deadline
int findMaxDeadline(Job jobs[], int n) {
    int maxDeadline = jobs[0].deadline;
    for (int i = 1; i < n; i++) {
        if (jobs[i].deadline > maxDeadline) {
            maxDeadline = jobs[i].deadline;
        }
    }
    return maxDeadline;
}

// Function to perform Job Sequencing
void jobSequence(Job jobs[], int n) {
    // Sort jobs by descending profit
    qsort(jobs, n, sizeof(Job), compare);

    // Find the maximum deadline
    int maxDeadline = findMaxDeadline(jobs, n);

    // Array to store the result (whether a job is taken at a certain time)
    int result[maxDeadline];
    for (int i = 0; i < maxDeadline; i++) {
        result[i] = -1; // -1 means no job scheduled at that time
    }

    // Array to store the final sequence of jobs
    int totalProfit = 0;
    int jobCount = 0;

    // Traverse through all jobs
    for (int i = 0; i < n; i++) {
        // Find a time slot for the current job (starting from its deadline)
        for (int j = jobs[i].deadline - 1; j >= 0; j--) {
            if (result[j] == -1) {
                // Slot found
                result[j] = jobs[i].id;
                totalProfit += jobs[i].profit;
                jobCount++;
                break;
            }
        }
    }

    // Print the job sequence and total profit
    printf("Job Sequence:\n");
    for (int i = 0; i < maxDeadline; i++) {
        if (result[i] != -1) {
            printf("Job %d ", result[i]);
        }
    }
    printf("\nTotal Profit: %d\n", totalProfit);
}

int main() {
    int n;
    printf("Enter the number of jobs: ");
    scanf("%d", &n);

    Job jobs[n];
   
    printf("Enter job details (Job ID, Deadline, Profit):\n");
    for (int i = 0; i < n; i++) {
        scanf("%d %d %d", &jobs[i].id, &jobs[i].deadline, &jobs[i].profit);
    }

    // Perform Job Sequencing
    jobSequence(jobs, n);

    return 0;
}
