#include <stdio.h>
int knapsack(int weights[], int values[], int n, int capacity) {
    int dp[n+1][capacity+1];
    for (int i = 0; i <= n; i++) {
        for (int w = 0; w <= capacity; w++) {
            if (i == 0 || w == 0) {
                dp[i][w] = 0;  
            } else if (weights[i-1] <= w) {
                dp[i][w] = (values[i-1] + dp[i-1][w-weights[i-1]] > dp[i-1][w]) ? 
                            values[i-1] + dp[i-1][w-weights[i-1]] : dp[i-1][w];
            } else {
                dp[i][w] = dp[i-1][w];  
            }
        }
    }
    return dp[n][capacity];
}

int main() {
    int n, capacity;
    printf("Enter the number of items: ");
    scanf("%d", &n);
    printf("Enter the capacity of the knapsack: ");
    scanf("%d", &capacity);
    int weights[n], values[n];
    printf("Enter the weights and values of the items:\n");
    for (int i = 0; i < n; i++) {
        printf("Item %d - Weight:\n", i+1);
        scanf("%d", &weights[i]);
        printf("Item %d - Value:\n", i+1);
        scanf("%d", &values[i]);
    }
    int max_value = knapsack(weights, values, n, capacity);
    printf("The maximum value that can be obtained is: %d\n", max_value);

    return 0;
}
